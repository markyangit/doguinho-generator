{"version":3,"sources":["media/panda.jpeg","store/index.js","App.js","index.js"],"names":["GET_IMAGE","REQUEST_IMAGE","FAILED_REQUEST","fetchDog","dispatch","type","fetch","then","r","json","payload","message","getImage","error","failedRequest","initialState","isFetching","imagePath","panda","store","createStore","state","action","applyMiddleware","thunk","connect","src","className","onClick","alt","href","ReactDOM","render","document","getElementById"],"mappings":"gNAAe,MAA0B,mCCKnCA,EAAY,YACZC,EAAgB,gBAChBC,EAAiB,iBAchB,SAASC,IACd,OAAO,SAACC,GAEN,OADAA,EATK,CAAEC,KAAMJ,IAUNK,MAAM,2CACVC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OACZF,MACC,SAACE,GAAD,OAAUL,EAlBpB,SAAkBK,GAChB,MAAO,CAAEJ,KAAML,EAAWU,QAASD,EAAKE,SAiBbC,CAASH,OAC5B,SAACI,GAAD,OAAWT,EAXrB,SAAuBS,GACrB,MAAO,CAAER,KAAMH,EAAgBQ,QAASG,GAUZC,CAAcD,WAK5C,IAAME,EAAe,CACnBC,YAAY,EACZC,UAAWC,EACXL,MAAO,IAgBT,IAEeM,EAFDC,aAbd,WAAgD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAC7C,OAAQA,EAAOjB,MACb,KAAKJ,EACH,OAAO,2BAAKoB,GAAZ,IAAmBL,YAAY,IACjC,KAAKhB,EACH,OAAO,2BAAKqB,GAAZ,IAAmBJ,UAAWK,EAAOZ,QAASM,YAAY,IAC5D,KAAKd,EACH,OAAO,2BAAKmB,GAAZ,IAAmBR,MAAOS,EAAOZ,QAASM,YAAY,IACxD,QACE,OAAOK,KAIsBE,YAAgBC,M,eCzBnD,IAOeC,eAPS,SAACJ,GAAD,MAAY,CAClCK,IAAKL,EAAMJ,UACXD,WAAYK,EAAML,eAEO,SAACZ,GAAD,MAAe,CACxCD,SAAU,kBAAMC,EAASD,SAEZsB,EA5Bf,YAA6C,IAA9BT,EAA6B,EAA7BA,WAAYU,EAAiB,EAAjBA,IAAKvB,EAAY,EAAZA,SAC9B,OACI,sBAAKwB,UAAU,MAAf,UACE,oDACA,wBACEA,UAAU,YACVC,QAASzB,EACTE,KAAK,SAHP,2BAOA,qBAAKsB,UAAU,UAAf,SACGX,EAAa,2CAAoB,qBAAKU,IAAKA,EAAKG,IAAI,UAEvD,iCACE,yDAAwB,mBAAGC,KAAK,gCAAR,wCCdlCC,IAASC,OACL,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEJc,SAASC,eAAe,W","file":"static/js/main.84002bf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/panda.25575b20.jpeg\";","// src/store/index.js\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport panda from '../media/panda.jpeg'\n\nconst GET_IMAGE = 'GET_IMAGE';\nconst REQUEST_IMAGE = 'REQUEST_IMAGE';\nconst FAILED_REQUEST = 'FAILED_REQUEST';\n\nfunction getImage(json) {\n  return { type: GET_IMAGE, payload: json.message };\n}\n\nfunction requestDog() {\n  return { type: REQUEST_IMAGE };\n}\n\nfunction failedRequest(error) {\n  return { type: FAILED_REQUEST, payload: error };\n}\n\nexport function fetchDog() {\n  return (dispatch) => {\n    dispatch(requestDog());\n    return fetch('https://dog.ceo/api/breeds/image/random')\n      .then((r) => r.json()\n        .then(\n          (json) => dispatch(getImage(json)),\n          (error) => dispatch(failedRequest(error)),\n        ));\n  };\n}\n\nconst initialState = {\n  isFetching: false,\n  imagePath: panda,\n  error: '',\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_IMAGE:\n      return { ...state, isFetching: true };\n    case GET_IMAGE:\n      return { ...state, imagePath: action.payload, isFetching: false };\n    case FAILED_REQUEST:\n      return { ...state, error: action.payload, isFetching: false };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;","// src/App.js\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDog } from './store';\nimport './App.css';\n\nfunction App({ isFetching, src, fetchDog }) {\n  return (\n      <div className=\"App\">\n        <h1>Doguinho Generator</h1>\n        <button\n          className=\"fetch-btn\"\n          onClick={fetchDog}\n          type=\"button\"\n        >\n          Novo Doguinho\n        </button>\n        <div className=\"dog-pic\">\n          {isFetching ? <p>Loading...</p> : <img src={src} alt=\"dog\" /> }\n        </div>\n        <footer>\n          <p>Vers√£o beta 1.0 - by <a href=\"https://github.com/markyangit\">Gabriel Markyan</a></p>\n        </footer>\n      </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  src: state.imagePath,\n  isFetching: state.isFetching});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDog: () => dispatch(fetchDog())});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}